Directionality : Rtl-------------------------------------------------------------------------------------------------
برای rtl کردن کل پروژه home را داخل این ویجت قرار بدید

equatable-------------------------------------------------------------------------------------------
https://pub.dev/packages/equatable
بهتون کمک میکنه از ریبیلد شدن بیخودی ویجت هاتون جلوگیری کنید
مخصوصا توی معماری بلاک خیلی به درد میخوره

زمانی که این دپندنسی را داشته باشیم موقع ساخت کلاس بلاک تیکش را بزنیم
کلاس های state & event ازش ارث بری میکنن به صورت اتوماتیک
وقتی از equatable ارث بری میکنیم میتونیم یک چیزی override کنیم به اسم get props
فیلدهایی که باید مساوی بودنش چک بشه را اینجا مشخص میکنیم
مثلا فیلد اکسپشن را بهش بدیم
  @override
  List<Object> get props => [exception];
زمانی که این اکسپشن که داره به وجود میاد
با اکسپشن قبلی که به صورت state داره ارسال میشه تفاوت داشته باشه
عملا state به homeScreen میرسه
اما اگر این اکسپشن با اکسپشن قبلی مساوی باشه که این مساوی بودن را equatable چک میکنه
عملا باعث ریبیلد شدن صفحه هوم نمیشه
این مزیت equatable است
به صورت پیش فرض اگه استفاده نکنیم تو هم حالت ها ریبیلد میشه

مثلا وقتی استیت هوم لودینگ رو دو بار پست سر هم به صفحه ارسال کنیم فقط یک بار ری بیلد اتفاق می افته

cached_network_image--------------------------------------------------------------------------------
https://pub.dev/packages/cached_network_image
برای کش کردن تصاویر در برنامه که با هر بار بیلد شدن ویجت از اول دانلود نشن

نحوه استفاده:
به جای ویجت image معمولی از CachedNetworkImage استفاده میکنیم
** imageUrl:
** placeholder:
** errorWidget:

smooth_page_indicator-------------------------------------------------------------------------------
https://pub.dev/packages/smooth_page_indicator

PageView--------------------------------------------------------------------------------------------
یک روش برای ساخت اسلایدر هست. معادل viewPager در اندروید
مثل snapHelper هم اسکرول میخورد

AspectRatio-----------------------------------------------------------------------------------------
ویجت برای نسبت دادن به جای سایز مستقیم
** aspectRatio: 2,
به این معنی هست که width همیشه دو برابر height خواهد بود
۱ یعنی مربع

InkWell---------------------------------------------------------------------------------------------
برای inkWell هم میشه border radius در نظر گرفت
** borderRadius

GestureDetector-------------------------------------------------------------------------------------
میشه به جای inkWell استفاده کرد وقتی ریپل را نیاز نداریم

Nested Scrolling####################################################################################
پیاده سازی اسکرول تو در تو همراه با انیمیشن پارالاکس
یعنی سرعت جمع شدن عکس سریع تر از اسکرول کاربر است
یادآوری از پروژه بلاگ :
Slivers---------------------------------------------------------------------------------------------
SliverAppBar & SliverList---------------------------------------------------------------------------
وقتی از اپ بار عادی استفاده میکنیم و اسکرول میکنیم اپ بار بالا ثابت میمونه
اگه بخوام یک سری تغییرات روی رفتار اپ بار بدم باید از sliverAppBar استفاده کنم
اسلیورها جزو لیست ویوها یا اسکرول ویوهایی هستن توی فلاتر که میتونن با هم تعامل داشته باشن
و برای پیاده سازی اسکرول های تو در تو مورد استفاده قرار میگیرن
و به ازای اسکرول شدن هر کدام از فرزندانشون به هم اطلاع میدن

توی body
به جای SingleChildScrollView از CustomScrollView استفاده کنید
داخلش به جای children از slivers استفاده کنید
به جای appBar از sliverAppBar استفاده کنید
و تمام attr هایی که قبلا در اپ بار داشتید را داخلش کپی کنید
برای محتوای داخل صفحه به جای column از sliverList استفاده کنید
 به جای crossAxisAlignment یک attr داریم به اسم delegate
 به معنی محول کردن
میایم برای delegate از sliverChildDelegate.fixed استفاده میکنیم
یک لیستی از فرزندان لیستمون باید بهش پاس بدیم
این فرزندان چیان؟
چیزایی که قبلا توی column تعریف کرده بودیم

حالا این sliverList چیه؟
میتونیم ازش برای پیاده سازی لیست های تو در تو استفاده کنیم
برای اینکه به اپ بار بفهمونید من یک محتوای اسکرول شدنی دارم باید از Sliver ها استفاده کنید
که بتونن با هم صحبت کنن

بعد از انجام این تغییرات هم زمان با اسکرول کردن ما اپ بار بالا هم اسکرول میخوره میره بالا

اگر این دو تا ویژگی را در اپ بار اضافه کنیم ثابت میمونه
pinned: true ,
 floating: true ,

 اگر اپ بار elevation داشته باشه:
 زمانی که به بالا میرسیم سایه را از بین میبره و وقتی به پایین میریم سایه دار میشه

 برای پیاده سازی انیمشن های اپ بار از این اسلیورها استفاده میشه
 همچنین برای پیاده سازی لیست های تو در تو

نکته مهم :
فرزندان customScrollView همه باید از نوع sliver باشند و نمیتوان از ویجت های معمولی استفاده کرد
در غیر این صورت خطا میگیریم
----------------------------------------------------------------------------------------------------
customScrollView------------------------------------------------------------------------------------
تمام فرزندانش باید از نوع اسلیور باشن
مثلا وقتی میخوایم column استفاده کنیم نمیتونیم مستقیم داخلش بذاریم
برای حل این موضوع از یک ویجتی استفاده میکنیم به اسم SliverToBoxAdapter
SliverAppBar----------------------------------------------------------------------------------------
 expandedHeight: MediaQuery.of(context).size.width * 0.8,
 یعنی وقتی که اپ بار در حالت اکسپندد هست چه ارتفاعی داشته باشد
 flexibleSpace: ImageLoadingService(imageUrl: product.imageUrl),
 یک ویجت را بهش پاس میدیم که قراره توش لود شه
 foregroundColor: LightThemeColors.primaryTextColor,
 رنگ آیتم های اپ بار
 actions: [
   IconButton(
       onPressed: () {}, icon: const Icon(CupertinoIcons.heart))
 ],
 دکمه های موجود در اپ بار

            ),

 FloatingActionButton.extended----------------------------------------------------------------------
 برای fab های غیر دابره ای